<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egov.mes.BOM.dao.ProductBomMapper">

<!-- 제품전체조회 -->
<select id="ProFind" resultType="egov.mes.BOM.dao.ProductBomVO">
	select podt_code , podt_flag , FN_GET_CODE_NAME(podt_code) AS codeName
	from Product 
</select>

<!-- 자재테이블 조회 -->
<select id="rscFind" resultType="egov.mes.BOM.dao.ProductBomVO">
	select rsc_code
	from resources
	where rsc_flag = 'Y'
</select>

<!-- 자재코드로 자재명 호출 -->
<select id="rscName" resultType="egov.mes.BOM.dao.ProductBomVO">
	select FN_GET_CODE_NAME(rsc_code) AS codeName
	from resources
	where rsc_code = #{resCode}
</select>

<!-- 자재코드로 자재명 호출 -->
<select id="RscUnit" resultType="egov.mes.BOM.dao.ProductBomVO">
	select FN_GET_RSC_UNIT(rsc_code) AS rscUnit
	from resources
	where rsc_code = #{resCode}
</select>

<!-- 제품단건 상세 조회 -->
<select id="ProDetail" resultType="egov.mes.BOM.dao.ProductBomVO">
	select	podt_code , podt_unit , podt_flag , man_flag , podt_qnt , podt_price , FN_GET_CODE_NAME(podt_code) AS codeName
	from	Product 
	where	podt_code = #{podtCode}
</select>

<!-- 제품BOM(자재) -->
<select id="rscDetail" resultType="egov.mes.BOM.dao.ProductBomVO">
	SELECT	res_code , res_usage , res_etc , proc_code , FN_GET_CODE_NAME(res_code) AS codeName , FN_GET_RSC_UNIT(res_code) AS rscUnit , 'R' AS CRUD
	FROM	Prdt_bom_res
	WHERE	podt_code = #{podtCode}
	ORDER BY res_code
</select>

<!-- 공정흐름 조회 -->
<select id="ProcDetail" resultType="egov.mes.BOM.dao.ProductBomVO">
	SELECT	proc_code  , podt_code , proc_index , FN_GET_CODE_NAME(proc_code) AS codeName , 'R' AS CRUD
	FROM 	process_flowInfo 
	WHERE	podt_code = #{podtCode}
	ORDER BY proc_code
</select>

<!-- 공정코드 테이블 조회-->
<select id="ProcFind" resultType="egov.mes.BOM.dao.ProductBomVO">
	select code
	from common_code
	where group_code = 'proc'
	ORDER BY code
</select>

<!-- 공정코드로 공정명 호출 -->
<select id="ProcName" resultType="egov.mes.BOM.dao.ProductBomVO">
	select code_Name	
	from common_code
	where code = #{procCode}
</select>


<!-- ////// 데이터 추가 , 업데이트 영역 /////////////// -->

<insert id="ProcInsert" parameterType="egov.mes.BOM.dao.ProductBomVO">
	insert into process_flowInfo (
									proc_code,
									podt_code,
									proc_index
									)
							values(
									#{procCode},
									#{podtCode},
									#{procIndex}
									)
</insert>

<insert id="ResInsert" parameterType="egov.mes.BOM.dao.ProductBomVO">
	     insert into Prdt_bom_res (
									res_code,
									podt_code,
									res_usage,
									proc_code,
									res_etc
									)
							values(
									#{resCode},
									#{podtCode},
									#{resUsage},
									#{procCode},
									#{resEtc}
									)
</insert>

<update id="ResUpdate" parameterType="egov.mes.BOM.dao.ProductBomVO">
	UPDATE Prdt_bom_res
	SET
	res_usage 	= #{resUsage},
	proc_code	= #{procCode},
	res_etc 	= #{resEtc}
	WHERE res_code = #{resCode} AND podt_code = #{podtCode}

</update>



<!-- ////// 데이터 삭제 영역 /////////////// -->

<delete id="ProcDelete" parameterType="egov.mes.BOM.dao.ProductBomVO">
	DELETE 
	FROM process_flowInfo
    WHERE podt_code = #{podtCode}
</delete>

<delete id="ResDelete" parameterType="egov.mes.BOM.dao.ProductBomVO">
	delete 
	from Prdt_bom_res
	where res_code = #{resCode}
</delete>

<delete id="ResAllDelete" parameterType="egov.mes.BOM.dao.ProductBomVO">
	DELETE 
	FROM Prdt_bom_res
    WHERE podt_code = #{podtCode}
</delete>



</mapper>